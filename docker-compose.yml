version: "3.8"

services:
  app:
    build: .
    volumes:
      - .:/app
    working_dir: /app
    command: tail -f /dev/null
    stdin_open: true
    tty: true
    depends_on:
      - course-kafka-dev
      - minio-dev

  minio-dev:
    container_name: minio-dev
    image: minio/minio:RELEASE.2022-11-08T05-27-07Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9001:9000"
      - "9002:9001"
    volumes:
      - minio_data:/data

  # This service uses the minio/mc image to create the bucket.
  minio-init:
    image: minio/mc
    depends_on:
      - minio-dev
    entrypoint: >
      sh -c "
      sleep 10 &&
      mc config host add myminio http://minio-dev:9000 minioadmin minioadmin &&
      mc mb myminio/spark || echo 'Bucket spark already exists'
      "

  zookeeper-dev:
    container_name: zookeeper-dev
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  course-kafka-dev:
    container_name: course-kafka-dev
    image: wurstmeister/kafka:2.13-2.8.1
    environment:
      KAFKA_ADVERTISED_HOST_NAME: course-kafka-dev
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-dev:2181
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper-dev

  kafdrop-dev:
    container_name: kafdrop-dev
    image: obsidiandynamics/kafdrop:3.30.0
    ports:
      - "9003:9000"
    environment:
      - KAFKA_BROKERCONNECT=course-kafka-dev:9092
    depends_on:
      - course-kafka-dev

volumes:
  minio_data: